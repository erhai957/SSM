<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hqyj.JWSystem.system.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.hqyj.JWSystem.system.model.Role">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="available" jdbcType="VARCHAR" property="available" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, available, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hqyj.JWSystem.system.model.Role">
    insert into sys_role (role_id, role_name, available, 
      create_time)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{available,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hqyj.JWSystem.system.model.Role">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hqyj.JWSystem.system.model.Role">
    update sys_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hqyj.JWSystem.system.model.Role">
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      available = #{available,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
  <!-- ######################################################################## -->
	<select id="queryAllRole" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_role
	</select>
	
	<select id="queryRoleById" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT
		sys_role.role_id,
		sys_role.role_name,
		sys_role.available,
		sys_role.create_time
		FROM
		sys_user
		INNER JOIN sys_user_role ON sys_user.id = sys_user_role.user_id
		INNER JOIN sys_role ON sys_user_role.role_id = sys_role.role_id
		where id = #{id,jdbcType=INTEGER}
	</select>
</mapper>